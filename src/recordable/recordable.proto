syntax = "proto3";

package mrr.recordable;

import "src/recordable/mach_trap/mach_trap.proto";
import "src/recordable/scheduling/scheduling.proto";
import "src/recordable/syscall/syscall.proto";

// Top level messages are broken up roughly by if they would be self-contained
// in a module.

// Trace is the top level message. It contains a target and a list of events.
message Trace {
  message Target {
    string path = 1;
    repeated string arguments = 2;   // N.B. Does not include argv[0]
    repeated string environment = 3; // K=V strings
  }

  Target target = 1;
  repeated LogEvent events = 2;
}

// LogEvent is a single event in the trace.
// It contains a program counter and a union of all possible events.
message LogEvent {
  uint64 pc = 1;
  repeated uint64 register_state = 2;
  oneof event {
    mrr.recordable.syscall.Syscall syscall = 10;
    mrr.recordable.mach_trap.MachTrap mach_trap = 11;
    mrr.recordable.scheduling.Scheduling scheduling = 12;
  }
}